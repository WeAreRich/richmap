{"version":3,"sources":["webpack:///./src/components/pages/MapHome.vue?ae0e","webpack:///./src/services/Logger/index.ts","webpack:///./src/constants/mapbox.ts","webpack:///./src/components/pages/MapHome.vue?535e","webpack:///./src/services/map-locate-position.service.ts","webpack:///./src/services/map-source-animation.service.ts","webpack:///./src/components/pages/MapHome.vue?d5cf","webpack:///./src/components/pages/MapHome.vue?583a","webpack:///./src/components/pages/MapHome.vue","webpack:///./src/services/Message/index.ts","webpack:///./src/services/api/dataanalysis/DataAnalysisServiceMock.ts","webpack:///./src/services/api/dataanalysis/DataAnalysisService.ts","webpack:///./src/services/api/search/SearchService.ts","webpack:///./src/services/api/search/SearchServiceMock.ts","webpack:///./src/services/api/map-source/MapSourceService.ts","webpack:///./src/types/mapbox-source.ts","webpack:///./src/services/api/map-source/MapSourceServiceMock.ts","webpack:///./src/services/api/ApiProvider.ts"],"names":["a","LdhC","e","t","n","d","r","Logger","info","tag","contents","_i","arguments","length","time","Date","toLocaleTimeString","console","_a","contents_1","item","log","apply","concat","error","contents_2","contents_3","OK+q","i","u","o","__webpack_require__","__webpack_exports__","tileSets","ACCESS_TOKEN","HUBEI_BOUNDS","mapStyles","night-light-2001","night-light-2013","hubeiDEM","hubeiGDP","hubeiSlope","hubieNightLight","REC_LAYER_ID","PDH9","c","s","l","map_locate_position_service_MapLocatePositionService","MapLocatePositionService","locateToBounds","rec","map","eraseBounds","fitBounds","removeLayer","mapbox","locateToPosition","pos","zoom","showMark","flyTo","center","curve","this","marker","remove","mapbox_gl_default","Marker","setLngLat","addTo","h","p","map_source_animation_service_MapSourceAnimationService","MapSourceAnimationService","TAG","ID","counter","layers","sourceIds","mapboxSources","prototype","addSource","mapBoxSource","_this","Promise","resolve","source","type","url","id","push","on","addSources","promises","all","showLayer","index","findIndex","toString","addLayer","layer","hideLayer","autoDisplay","sort","reAutoDisplay","stop","clearTimeout","timeId","hideAllLayer","autoDisplayByRange","start","end","rangeSources","filter","year","reAutoDisplayByRange","setTimeout","sources","forEach","Symbol","iterator","constructor","v","Object","setPrototypeOf","__proto__","Array","hasOwnProperty","create","m","next","throw","done","value","then","w","label","sent","trys","ops","return","TypeError","call","pop","Consulting","__WEBPACK_AMD_REQUIRE_ARRAY__","bind","catch","oe","DetectFixedSideMenu","PovertyMap","pages_MapHomevue_type_script_lang_ts","_super","MapHome","SHOWING_SOURCE","mapSources","__extends","mounted","sourceApi","ApiProvider","mapSourceService","messageService","Message","handleOnMapLoad","mapAnimationService","chooseMap","name","isSourceLoaded","removeSource","getByNameAndYear","res","Error","handleSelectPalce","bounds","b","lon","lat","handlePlayMap","startYear","endYear","getByName","$Spin","show","hide","handleStopMap","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__decorate","vue_property_decorator","components","Sider","sider","Layout","layout","A","component","componentNormalizer","_vm","_h","$createElement","_c","_self","staticClass","_v","staticStyle","background-color","attrs","hide-trigger","child-say","on-select-place","on-play","on-stop","on-map-load","default","vm","msg","$Message","gtj/","DataAnalysisServiceMock","getPoorState","children","DataAnalysisService_DataAnalysisServiceImpl","DataAnalysisServiceImpl","HttpService","fetch","path","response","SearchService_SearchServiceImpl","SearchServiceImpl","search","kw","queryParams","SearchServiceMock","MapSourceService_MapSourceServiceImpl","MapSourceServiceImpl","MapboxSource","g","S","x","MapSourceServiceMock_MapSourceServiceMock","MapSourceServiceMock","P","api","isMock","dataAnalysisService","searchService","vEB4"],"mappings":"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","file":"static/js/4.e21b59c3fc45f247ba9a.js","sourcesContent":["import mod from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--6-0!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=style&index=0&id=7baeb53e&scoped=true&lang=css\"; export default mod; export * from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--6-0!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=style&index=0&id=7baeb53e&scoped=true&lang=css\"","/*\n日志类\n */\nexport class Logger {\n  private instance: Logger;\n\n  static info(tag, ...contents): void {\n    let time = new Date().toLocaleTimeString();\n    if (console.info) {\n      console.info(`At ${time} in 【${tag}】`);\n      for (let item of contents) {\n        console.info(item);\n      }\n      console.log('-------------------------------');\n    } else {\n      Logger.log(tag, ...contents);\n    }\n  }\n\n  static error(tag, ...contents): void {\n    let time = new Date().toLocaleTimeString();\n    if (console.error) {\n      console.error(`At ${time} in ${tag}`);\n      for (let item of contents) {\n        console.error(item);\n      }\n    } else {\n      Logger.log(tag, ...contents);\n    }\n  }\n\n  static log(tag, ...contents): void {\n    let time = new Date().toLocaleTimeString();\n    console.log(`At ${time} in ${tag}`);\n    for (let item of contents) {\n      console.log(item);\n    }\n  }\n}\n","const ACCESS_TOKEN = 'pk.eyJ1Ijoid2VueGlhbmdkb25nIiwiYSI6ImNqajEyN2owYjBvNHYzdm10c2p2NXowM2kifQ.kixIr8Jwk2mAqmlQCWW88Q';\nconst CHINA_BOUNDS = [[70, 17], [140, 55]];\n// 108.3,29.0,116.3,33.3\nconst HUBEI_BOUNDS =[[108.3,29.0],[116.3,33.3]];\n\nconst CHINA_CENTER = [104.999927, 35.000074];\nlet mapStyles = {\n  'night-light-2001': 'mapbox://styles/wenxiangdong/cjjuyolqw21sf2rmmrrp13azv',\n  'night-light-2013': 'mapbox://styles/wenxiangdong/cjjuzjzid0a1a2ro45v4abumf'\n};\n\nlet tileSets = {\n  'hubeiDEM': 'mapbox://wenxiangdong.6mjehw01',\n  'hubeiGDP': 'mapbox://wenxiangdong.aa00vskv',\n  'hubeiSlope': 'mapbox://wenxiangdong.9vwvp9tc',\n  'hubieNightLight': 'mapbox://wenxiangdong.527q7f2p'\n};\nconst REC_LAYER_ID = 'rec-layer-id';\nconst LINE_LAYER_ID = 'line-layer-id';\nexport { ACCESS_TOKEN, CHINA_BOUNDS, CHINA_CENTER, mapStyles, REC_LAYER_ID, LINE_LAYER_ID, HUBEI_BOUNDS, tileSets };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"top\"}),_vm._v(\" \"),_c('layout',[_c('Sider',{staticStyle:{\"background-color\":\"white\"},attrs:{\"hide-trigger\":\"\"}},[_c('detect-fixed-side-menu',{on:{\"child-say\":_vm.chooseMap,\"on-select-place\":_vm.handleSelectPalce,\"on-play\":_vm.handlePlayMap,\"on-stop\":_vm.handleStopMap}})],1),_vm._v(\" \"),_c('Layout',[_c('poverty-map',{on:{\"on-map-load\":_vm.handleOnMapLoad}}),_vm._v(\" \"),_c('consulting')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mapboxgl from 'mapbox-gl';\nimport { Logger } from '@/services/Logger';\nimport { REC_LAYER_ID } from '@/constants/mapbox';\n\nexport class MapLocatePositionService {\n\n  private static marker: mapboxgl.Marker;\n  /**\n   * 定位到某一个 bounds 区域\n   * @param {mapboxgl.LngLatBounds} rec\n   * @param {mapboxgl.Map} map\n   * @param {boolean} eraseBounds 是否在缩放后去掉边框\n   */\n  public static locateToBounds(rec: mapboxgl.LngLatBounds, map: mapboxgl.Map, eraseBounds: boolean = false) {\n    Logger.info('MapLocatePositionService', 'locateToBounds', rec);\n    map.fitBounds(rec);\n    if (eraseBounds) {\n      map.removeLayer(REC_LAYER_ID);\n    }\n  }\n\n  /**\n   * 定位到某一点\n   * @param {mapboxgl.LngLatLike} pos\n   * @param {mapboxgl.Map} map\n   * @param {number} zoom 缩放等级 默认7\n   */\n  public static locateToPosition(pos: mapboxgl.LngLatLike, map: mapboxgl.Map, zoom: number = 7, showMark: boolean = true) {\n    map.flyTo({\n      center: pos,\n      curve: 1,\n      zoom: zoom\n    });\n    if (showMark) {\n      if (this.marker) {\n        this.marker.remove();\n      }\n      this.marker = new mapboxgl.Marker()\n        .setLngLat(pos)\n        .addTo(map);\n    }\n  }\n}","import { Logger } from '@/services/Logger';\nimport { MapboxSource } from '@/types/mapbox-source';\nimport Timer = NodeJS.Timer;\n\nexport class MapSourceAnimationService {\n  private TAG = 'MapSourceAnimationService';\n  private ID = 'sourceId';\n  private counter = 0;\n  private layers: mapboxgl.Layer[] = [];\n  private sourceIds: string[] = [];\n  private timeId;\n\n  private mapboxSources: MapboxSource[] = [];\n  constructor(private map: mapboxgl.Map) {\n  }\n\n  /**\n   * 增加一个地图资源\n   * @param {MapboxSource} mapBoxSource\n   * @return {Promise<string>}\n   */\n  public addSource(mapBoxSource: MapboxSource): Promise<string> {\n    return new Promise((resolve => {\n      let source: mapboxgl.RasterSource = {\n        type: 'raster',\n        url: mapBoxSource.url\n      };\n      let id = this.ID + (this.counter++);\n      mapBoxSource.ID = id;\n      this.map.addSource(id, source);\n      this.sourceIds.push(id);\n      this.map.on('sourcedata', () => {\n        resolve(id);\n      });\n    }));\n  }\n\n  /**\n   * 增加一系列地图资源\n   * @param {string[]} sourceUrlList\n   * @return {Promise<string[]>}\n   */\n  public addSources(mapboxSources: MapboxSource[]): Promise<string[]> {\n    this.mapboxSources = mapboxSources;\n    let promises = mapboxSources.map(\n      source => this.addSource(source)\n    );\n    return Promise.all(promises);\n  }\n\n  /**\n   * 显示某一资源对应的图层\n   * @param {string} id\n   */\n  public showLayer(id: string | number) {\n    Logger.info(this.TAG, `show layer: ${id}`);\n    let index = this.layers.findIndex(item => item.id === id.toString());\n    if (index > -1) {\n      this.map.addLayer(this.layers[index]);\n      Logger.info(this.TAG, `exist layer ${id}`);\n    } else {\n      Logger.info(this.TAG, `not exist layer ${id}`);\n      let layer: mapboxgl.Layer = {\n        id: id.toString(),\n        type: 'raster',\n        source: id.toString()\n      };\n      this.map.addLayer(layer);\n      this.layers.push(layer);\n    }\n  }\n\n  /**\n   * 隐藏某一资源对应的图层\n   * @param {string} id\n   */\n  public hideLayer(id: string | number) {\n    if (this.layers.findIndex(layer => layer.id === id.toString()) > -1) {\n      Logger.info(this.TAG, 'remove layer:' + id);\n      this.map.removeLayer(id.toString());\n    }\n  }\n\n\n  /**\n   * 自动播放所有资源，从头开始\n   */\n  public autoDisplay() {\n    this.sourceIds.sort();\n    Logger.info(this.TAG, this.sourceIds);\n    this.reAutoDisplay(0);\n  }\n\n\n  public stop() {\n    Logger.info(this.TAG, '停止播放');\n    clearTimeout(this.timeId);\n    this.hideAllLayer();\n  }\n  /**\n   * 根据区间来自动播放\n   * TODO: 实现，由于开始和结束的时间格式未定，未实现\n   * @param start\n   * @param end\n   */\n  public autoDisplayByRange(start: number, end: number) {\n    const rangeSources = this.mapboxSources.filter(source => start <= source.year && source.year <= end);\n    Logger.info(this.TAG, 'will to play range' ,rangeSources);\n    this.reAutoDisplayByRange(rangeSources, 0);\n  }\n  /**\n   * 从头自动 播放的递归实现\n   * @param index\n   */\n  private reAutoDisplay(index) {\n    // 递归条件结束\n    if (index === this.sourceIds.length) return;\n    // 是否有上层\n    if (index > 0) {\n      this.hideLayer(this.sourceIds[index - 1]);\n    }\n    // 显示当前\n    this.showLayer(this.sourceIds[index]);\n    // 递归\n    setTimeout(() => {\n      this.reAutoDisplay(index + 1);\n    }, 1000);\n  }\n\n  private reAutoDisplayByRange(sources: MapboxSource[], index: number) {\n    if (index === sources.length) return;\n    // 是否有上层\n    if (index > 0) {\n      this.hideLayer(sources[index - 1].ID);\n    }\n    // 显示当前\n    this.showLayer(sources[index].ID);\n    // 递归\n    this.timeId = setTimeout(() => {\n      this.reAutoDisplayByRange(sources, index + 1);\n    }, 1000);\n  }\n\n  private hideAllLayer() {\n    Logger.info(this.TAG, 'hide all');\n    this.layers.forEach(layer => {\n      try {\n          this.map.removeLayer(layer.id);\n      } catch (e) {}\n    })\n  }\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeclare var require : (filename,resolve)=>any;\nconst Consulting = (r) => require(['../common/Consulting.vue'],r);\nconst DetectFixedSideMenu = (r) => require([\"../common/DetectFixedSideMenu.vue\"],r);\nconst PovertyMap = (r) => require([\"../common/map/poverty-map/PovertyMap.vue\"],r);\nimport { Vue, Component } from \"vue-property-decorator\";\n// import Consulting from \"../common/Consulting.vue\";\n// import DetectFixedSideMenu from \"../common/DetectFixedSideMenu.vue\";\n// import PovertyMap from \"../common/map/poverty-map/PovertyMap.vue\";\nimport { Logger } from '../../services/Logger';\nimport { MapLocatePositionService } from '../../services/map-locate-position.service';\nimport { MapSourceService } from '../../services/api/map-source/MapSourceService';\nimport { api } from '../../services/api/ApiProvider';\nimport { Message as MessageService } from '../../services/Message';\nimport { HUBEI_BOUNDS } from '../../constants/mapbox';\nimport { MapSourceAnimationService } from '../../services/map-source-animation.service';\nimport { MapboxSource } from '../../types/mapbox-source';\nimport {Sider,Layout} from 'iview'\n\n@Component({\n  components: {Consulting, DetectFixedSideMenu, PovertyMap,Sider,Layout}\n})\n\nexport default class MapHome extends Vue {\n  private TAG = 'MapHome.vue';\n  private map: mapboxgl.Map;\n  private SHOWING_SOURCE = 'showing-source';\n  private sourceApi: MapSourceService;\n  private messageService: MessageService;\n  private mapAnimationService: MapSourceAnimationService;\n\n  private mapSources = {}; // 地图源\n\n  mounted() {\n    this.sourceApi = api.mapSourceService;\n    this.messageService = new MessageService(this);\n    this.mapSources;\n  }\n\n  handleOnMapLoad(map: mapboxgl.Map) {\n    Logger.info(this.TAG, 'map loaded', map);\n    this.map = map;\n    this.mapAnimationService = new MapSourceAnimationService(map);\n  }\n\n  async chooseMap(year, name){\n    console.log(year, name);\n    console.log('in map home');\n    // const map = this.map;\n    if (!this.map) {\n      this.messageService.error('请等待地图组件加载完成...')\n    }\n    // MapLocatePositionService.locateToPosition([place.lon, place.lat], this.map);\n    if (this.map.isSourceLoaded(this.SHOWING_SOURCE)) {\n      this.map.removeLayer(this.SHOWING_SOURCE);\n      this.map.removeSource(this.SHOWING_SOURCE);\n    }\n    try {\n      let res = await this.sourceApi.getByNameAndYear(name, year);\n      const item = res[0];\n      console.log('【MapHome】', item);\n      if (!item) throw new Error('no source result');\n      let source: mapboxgl.RasterSource = {\n        type: 'raster',\n        url: item.url\n      };\n      this.map.addSource(this.SHOWING_SOURCE, source);\n      this.map.addLayer({\n        id: this.SHOWING_SOURCE,\n        type: 'raster',\n\n        source: this.SHOWING_SOURCE\n      });\n    } catch (e) {}\n  }\n\n\n  handleSelectPalce(item) {\n    const bounds = HUBEI_BOUNDS;\n    const lon = item.lon;\n    const lat = item.lat;\n    if (lon < bounds[0][0] || lon > bounds[1][0] || lat < bounds[0][1] || lat > bounds[1][1]) {\n      this.messageService.error('选择的地点超出范围');\n    } else {\n      MapLocatePositionService.locateToPosition([lon, lat], this.map);\n    }\n  }\n\n  async handlePlayMap(startYear, endYear, name) {\n    if (!this.mapSources[name]) {\n      try {\n        let res = await this.sourceApi.getByName(name);\n        this.mapSources[name] = res;\n        Logger.info(this.TAG, 'get sources', res);\n        (this as any).$Spin.show();\n        await this.mapAnimationService.addSources(this.mapSources[name]);\n        Logger.info(this.TAG, '加载所有sources成功');\n      } catch (e) {} finally {\n        (this as any).$Spin.hide();\n      }\n    }\n    Logger.info(this.TAG, this.mapSources[name]);\n    this.mapAnimationService.autoDisplayByRange(startYear, endYear);\n  }\n\n  handleStopMap() {\n    this.mapAnimationService.stop();\n  }\n}\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--1-1!../../../node_modules/tslint-loader/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--1-1!../../../node_modules/tslint-loader/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./MapHome.vue?vue&type=template&id=7baeb53e&scoped=true\"\nimport script from \"./MapHome.vue?vue&type=script&lang=ts\"\nexport * from \"./MapHome.vue?vue&type=script&lang=ts\"\nimport style0 from \"./MapHome.vue?vue&type=style&index=0&id=7baeb53e&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7baeb53e\",\n  null\n  \n)\n\nexport default component.exports","export class Message {\n  private _vm: any;\n  constructor(vm: any) {\n    this._vm = vm;\n  }\n  info(msg) {\n    this._vm.$Message.info(msg);\n  }\n  error(msg) {\n    this._vm.$Message.error(msg);\n  }\n}","import {MapTypeOption} from \"@/models/MapTypeOption\";\nimport {DataAnalysisService} from \"@/services/api/dataanalysis/DataAnalysisService\";\n\nexport class DataAnalysisServiceMock implements DataAnalysisService {\n    async getPoorState(): Promise<MapTypeOption[]> {\n        const mapTypeOptionList: MapTypeOption[] = [\n            {\n                value: \"综合贫困排名\",\n                label: \"综合贫困排名\",\n                children: [\n                    {\n                        value: \"VSR指标排名\",\n                        label: \"VSR指标排名\",\n                        children: [\n                            {\n                                value: \"夜间灯光指标\",\n                                label: \"夜间灯光指标\",\n                                children: []\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                value: \"分类贫困排名\",\n                label: \"分类贫困排名\",\n                children: [\n                    {\n                        value: \"经济指标排名\",\n                        label: \"经济指标排名\",\n                        children: [\n                            {\n                                value: \"未来收入\",\n                                label: \"未来收入\",\n                                children: []\n                            }\n                        ]\n                    }\n                ]\n            },\n        ];\n        return mapTypeOptionList;\n    }\n}","import {MapTypeOption} from \"src/models/MapTypeOption\";\nimport http from \"@/services/api/HttpService\";\n\nexport interface DataAnalysisService {\n    getPoorState(): Promise<MapTypeOption[]>;\n}\n\nexport class DataAnalysisServiceImpl implements DataAnalysisService {\n    async getPoorState(): Promise<MapTypeOption[]> {\n        const res = await http.fetch({\n            path: `analysis/state`,\n        });\n        return res.response;\n    }\n}","import { SearchResult } from '@/models/SearchResult';\nimport http from '@/services/api/HttpService';\n\nexport interface SearchService {\n  search(kw: string): Promise<SearchResult[]>;\n}\n\nexport class SearchServiceImpl implements SearchService {\n  async search(kw: string): Promise<SearchResult[]> {\n    const res = await http.fetch({\n      path: 'search',\n      queryParams: {kw: kw}\n    });\n    return res.response;\n  }\n\n}","import { SearchService } from '@/services/api/search/SearchService';\nimport { SearchResult } from '@/models/SearchResult';\n\nexport class SearchServiceMock implements SearchService {\n  async search(kw: string): Promise<SearchResult[]> {\n    return undefined;\n  }\n\n}","import { MapboxSource } from '@/types/mapbox-source';\nimport http from '@/services/api/HttpService';\n\nexport interface MapSourceService {\n  getByName(name: string): Promise<MapboxSource[]>;\n  getByNameAndYear(name: string, year: number): Promise<MapboxSource[]>;\n}\n\nexport class MapSourceServiceImpl implements MapSourceService{\n  async getByName(name: string): Promise<MapboxSource[]> {\n    let res = await http.fetch({\n      path: 'map',\n      queryParams: {name: name}\n    });\n    return res.response;\n  }\n\n  async getByNameAndYear(name: string, year: number): Promise<MapboxSource[]> {\n    console.log('MapSourceApi', name, year);\n    let res = await http.fetch({\n      path: 'map/year',\n      queryParams: {name, year}\n    });\n    return res.response;\n  }\n\n}","export class MapboxSource {\n  ID: number | string;\n  type: string;\n  name: string;\n  url: string;\n  year: number;\n\n\n  constructor(ID: number, type: string, name: string, url: string, year: number) {\n    this.ID = ID;\n    this.type = type;\n    this.name = name;\n    this.url = url;\n    this.year = year;\n  }\n}","import { MapSourceService } from '@/services/api/map-source/MapSourceService';\nimport { MapboxSource } from '@/types/mapbox-source';\nimport { tileSets } from '@/constants/mapbox';\n\nconst source = new MapboxSource(1, 'raster', 'hubeiGDP', 'mapbox://wenxiangdong.aa00vskv', 2010);\n\nexport class MapSourceServiceMock implements MapSourceService{\n  async getByName(name: string): Promise<MapboxSource[]> {\n    let res = [];\n    res.push({\n      ID: 1,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubeiDEM,\n      year: 2010\n    });\n    res.push({\n      ID: 2,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubeiGDP,\n      year: 2011\n    });\n    res.push({\n      ID: 3,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubeiSlope,\n      year: 2012\n    });\n    res.push({\n      ID: 4,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubieNightLight,\n      year: 2013\n    });\n    return res;\n  }\n\n  async getByNameAndYear(name: string, year: number): Promise<MapboxSource[]> {\n    let res = [\n      source\n    ];\n    return res;\n  }\n\n}","import { DataAnalysisServiceMock } from '@/services/api/dataanalysis/DataAnalysisServiceMock';\nimport { DataAnalysisService, DataAnalysisServiceImpl } from '@/services/api/dataanalysis/DataAnalysisService';\nimport { SearchService, SearchServiceImpl } from '@/services/api/search/SearchService';\nimport { SearchServiceMock } from '@/services/api/search/SearchServiceMock';\nimport { MapSourceService, MapSourceServiceImpl } from '@/services/api/map-source/MapSourceService';\nimport { MapSourceServiceMock } from '@/services/api/map-source/MapSourceServiceMock';\n\nclass ApiProvider {\n  isMock: boolean = false;\n\n  dataAnalysisService: DataAnalysisService;\n  searchService: SearchService;\n  mapSourceService: MapSourceService;\n\n  constructor() {\n    if (this.isMock) {\n      this.dataAnalysisService = new DataAnalysisServiceMock();\n      this.searchService = new SearchServiceMock();\n      this.mapSourceService = new MapSourceServiceMock();\n    } else {\n      this.dataAnalysisService = new DataAnalysisServiceImpl();\n      this.searchService = new SearchServiceImpl();\n      this.mapSourceService = new MapSourceServiceImpl();\n    }\n  }\n}\n\nexport const api = new ApiProvider();"],"sourceRoot":""}