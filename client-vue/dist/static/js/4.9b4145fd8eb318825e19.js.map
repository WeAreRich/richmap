{"version":3,"sources":["webpack:///./src/components/pages/MapHome.vue?ae0e","webpack:///./src/services/Logger/index.ts","webpack:///./src/constants/mapbox.ts","webpack:///./src/components/pages/MapHome.vue?535e","webpack:///./src/services/map-locate-position.service.ts","webpack:///./src/services/map-source-animation.service.ts","webpack:///./src/components/pages/MapHome.vue?d5cf","webpack:///./src/components/pages/MapHome.vue?583a","webpack:///./src/components/pages/MapHome.vue","webpack:///./src/services/Message/index.ts","webpack:///./src/services/api/dataanalysis/DataAnalysisServiceMock.ts","webpack:///./src/services/api/dataanalysis/DataAnalysisService.ts","webpack:///./src/services/api/search/SearchService.ts","webpack:///./src/services/api/search/SearchServiceMock.ts","webpack:///./src/services/api/map-source/MapSourceService.ts","webpack:///./src/types/mapbox-source.ts","webpack:///./src/services/api/map-source/MapSourceServiceMock.ts","webpack:///./src/services/api/ApiProvider.ts"],"names":["a","LdhC","e","t","n","d","r","Logger","info","tag","contents","_i","arguments","length","Date","toLocaleTimeString","console","_a","contents_1","log","apply","concat","error","contents_2","contents_3","OK+q","i","u","o","__webpack_require__","__webpack_exports__","tileSets","ACCESS_TOKEN","HUBEI_BOUNDS","mapStyles","night-light-2001","night-light-2013","hubeiDEM","hubeiGDP","hubeiSlope","hubieNightLight","REC_LAYER_ID","PDH9","c","s","l","map_locate_position_service_MapLocatePositionService","MapLocatePositionService","locateToBounds","rec","map","eraseBounds","fitBounds","removeLayer","mapbox","locateToPosition","pos","zoom","showMark","flyTo","center","curve","this","marker","remove","mapbox_gl_default","Marker","setLngLat","addTo","h","p","map_source_animation_service_MapSourceAnimationService","MapSourceAnimationService","TAG","ID","counter","layers","sourceIds","mapboxSources","prototype","addSource","mapBoxSource","_this","Promise","resolve","source","type","url","id","push","on","addSources","promises","all","showLayer","index","findIndex","item","toString","addLayer","layer","hideLayer","autoDisplay","sort","reAutoDisplay","stop","clearTimeout","timeId","hideAllLayer","autoDisplayByRange","start","end","rangeSources","filter","year","reAutoDisplayByRange","setTimeout","sources","forEach","Symbol","iterator","constructor","b","Object","setPrototypeOf","__proto__","Array","hasOwnProperty","create","m","next","throw","done","value","then","w","label","sent","trys","ops","return","TypeError","call","pop","Consulting","__WEBPACK_AMD_REQUIRE_ARRAY__","bind","catch","oe","DetectFixedSideMenu","PovertyMap","pages_MapHomevue_type_script_lang_ts","_super","MapHome","SHOWING_SOURCE","mapSources","__extends","mounted","sourceApi","ApiProvider","mapSourceService","messageService","Message","handleOnMapLoad","mapAnimationService","chooseMap","name","isSourceLoaded","removeSource","getByNameAndYear","res","Error","handleSelectPalce","bounds","lon","lat","handlePlayMap","startYear","endYear","getByName","$Spin","show","hide","handleStopMap","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__decorate","vue_property_decorator","components","Sider","sider","Layout","layout","A","component","componentNormalizer","_vm","_h","$createElement","_c","_self","staticClass","_v","staticStyle","background-color","attrs","hide-trigger","child-say","on-select-place","on-play","on-stop","on-map-load","default","vm","msg","$Message","gtj/","DataAnalysisServiceMock","getPoorState","children","DataAnalysisService_DataAnalysisServiceImpl","DataAnalysisServiceImpl","HttpService","fetch","path","response","SearchService_SearchServiceImpl","SearchServiceImpl","search","kw","queryParams","SearchServiceMock","v","MapSourceService_MapSourceServiceImpl","MapSourceServiceImpl","MapboxSource","S","g","x","MapSourceServiceMock_MapSourceServiceMock","MapSourceServiceMock","P","api","isMock","dataAnalysisService","searchService","vEB4"],"mappings":"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","file":"static/js/4.9b4145fd8eb318825e19.js","sourcesContent":["import mod from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--6-0!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=style&index=0&id=7baeb53e&scoped=true&lang=css\"; export default mod; export * from \"-!../../../node_modules/extract-text-webpack-plugin/dist/loader.js??ref--6-0!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=style&index=0&id=7baeb53e&scoped=true&lang=css\"","/*\n日志类\n */\nexport class Logger {\n  private instance: Logger;\n\n  static info(tag, ...contents): void {\n    let time = new Date().toLocaleTimeString();\n    if (console.info) {\n      console.info(`At ${time} in 【${tag}】`);\n      for (let item of contents) {\n        console.info(item);\n      }\n      console.log('-------------------------------');\n    } else {\n      Logger.log(tag, ...contents);\n    }\n  }\n\n  static error(tag, ...contents): void {\n    let time = new Date().toLocaleTimeString();\n    if (console.error) {\n      console.error(`At ${time} in ${tag}`);\n      for (let item of contents) {\n        console.error(item);\n      }\n    } else {\n      Logger.log(tag, ...contents);\n    }\n  }\n\n  static log(tag, ...contents): void {\n    let time = new Date().toLocaleTimeString();\n    console.log(`At ${time} in ${tag}`);\n    for (let item of contents) {\n      console.log(item);\n    }\n  }\n}\n","const ACCESS_TOKEN = 'pk.eyJ1Ijoid2VueGlhbmdkb25nIiwiYSI6ImNqajEyN2owYjBvNHYzdm10c2p2NXowM2kifQ.kixIr8Jwk2mAqmlQCWW88Q';\nconst CHINA_BOUNDS = [[70, 17], [140, 55]];\n// 108.3,29.0,116.3,33.3\nconst HUBEI_BOUNDS =[[108.3,29.0],[116.3,33.3]];\n\nconst CHINA_CENTER = [104.999927, 35.000074];\nlet mapStyles = {\n  'night-light-2001': 'mapbox://styles/wenxiangdong/cjjuyolqw21sf2rmmrrp13azv',\n  'night-light-2013': 'mapbox://styles/wenxiangdong/cjjuzjzid0a1a2ro45v4abumf'\n};\n\nlet tileSets = {\n  'hubeiDEM': 'mapbox://wenxiangdong.6mjehw01',\n  'hubeiGDP': 'mapbox://wenxiangdong.aa00vskv',\n  'hubeiSlope': 'mapbox://wenxiangdong.9vwvp9tc',\n  'hubieNightLight': 'mapbox://wenxiangdong.527q7f2p'\n};\nconst REC_LAYER_ID = 'rec-layer-id';\nconst LINE_LAYER_ID = 'line-layer-id';\nexport { ACCESS_TOKEN, CHINA_BOUNDS, CHINA_CENTER, mapStyles, REC_LAYER_ID, LINE_LAYER_ID, HUBEI_BOUNDS, tileSets };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"top\"}),_vm._v(\" \"),_c('layout',[_c('Sider',{staticStyle:{\"background-color\":\"white\"},attrs:{\"hide-trigger\":\"\"}},[_c('detect-fixed-side-menu',{on:{\"child-say\":_vm.chooseMap,\"on-select-place\":_vm.handleSelectPalce,\"on-play\":_vm.handlePlayMap,\"on-stop\":_vm.handleStopMap}})],1),_vm._v(\" \"),_c('Layout',[_c('poverty-map',{on:{\"on-map-load\":_vm.handleOnMapLoad}}),_vm._v(\" \"),_c('consulting')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mapboxgl from 'mapbox-gl';\nimport { Logger } from '@/services/Logger';\nimport { REC_LAYER_ID } from '@/constants/mapbox';\n\nexport class MapLocatePositionService {\n\n  private static marker: mapboxgl.Marker;\n  /**\n   * 定位到某一个 bounds 区域\n   * @param {mapboxgl.LngLatBounds} rec\n   * @param {mapboxgl.Map} map\n   * @param {boolean} eraseBounds 是否在缩放后去掉边框\n   */\n  public static locateToBounds(rec: mapboxgl.LngLatBounds, map: mapboxgl.Map, eraseBounds: boolean = false) {\n    Logger.info('MapLocatePositionService', 'locateToBounds', rec);\n    map.fitBounds(rec);\n    if (eraseBounds) {\n      map.removeLayer(REC_LAYER_ID);\n    }\n  }\n\n  /**\n   * 定位到某一点\n   * @param {mapboxgl.LngLatLike} pos\n   * @param {mapboxgl.Map} map\n   * @param {number} zoom 缩放等级 默认7\n   */\n  public static locateToPosition(pos: mapboxgl.LngLatLike, map: mapboxgl.Map, zoom: number = 7, showMark: boolean = true) {\n    map.flyTo({\n      center: pos,\n      curve: 1,\n      zoom: zoom\n    });\n    if (showMark) {\n      if (this.marker) {\n        this.marker.remove();\n      }\n      this.marker = new mapboxgl.Marker()\n        .setLngLat(pos)\n        .addTo(map);\n    }\n  }\n}","import { Logger } from '@/services/Logger';\nimport { MapboxSource } from '@/types/mapbox-source';\nimport Timer = NodeJS.Timer;\n\nexport class MapSourceAnimationService {\n  private TAG = 'MapSourceAnimationService';\n  private ID = 'sourceId';\n  private counter = 0;\n  private layers: mapboxgl.Layer[] = [];\n  private sourceIds: string[] = [];\n  private timeId;\n\n  private mapboxSources: MapboxSource[] = [];\n  constructor(private map: mapboxgl.Map) {\n  }\n\n  /**\n   * 增加一个地图资源\n   * @param {MapboxSource} mapBoxSource\n   * @return {Promise<string>}\n   */\n  public addSource(mapBoxSource: MapboxSource): Promise<string> {\n    return new Promise((resolve => {\n      let source: mapboxgl.RasterSource = {\n        type: 'raster',\n        url: mapBoxSource.url\n      };\n      let id = this.ID + (this.counter++);\n      mapBoxSource.ID = id;\n      this.map.addSource(id, source);\n      this.sourceIds.push(id);\n      this.map.on('sourcedata', () => {\n        resolve(id);\n      });\n    }));\n  }\n\n  /**\n   * 增加一系列地图资源\n   * @param {string[]} sourceUrlList\n   * @return {Promise<string[]>}\n   */\n  public addSources(mapboxSources: MapboxSource[]): Promise<string[]> {\n    this.mapboxSources = mapboxSources;\n    let promises = mapboxSources.map(\n      source => this.addSource(source)\n    );\n    return Promise.all(promises);\n  }\n\n  /**\n   * 显示某一资源对应的图层\n   * @param {string} id\n   */\n  public showLayer(id: string | number) {\n    Logger.info(this.TAG, `show layer: ${id}`);\n    let index = this.layers.findIndex(item => item.id === id.toString());\n    if (index > -1) {\n      this.map.addLayer(this.layers[index]);\n      Logger.info(this.TAG, `exist layer ${id}`);\n    } else {\n      Logger.info(this.TAG, `not exist layer ${id}`);\n      let layer: mapboxgl.Layer = {\n        id: id.toString(),\n        type: 'raster',\n        source: id.toString()\n      };\n      this.map.addLayer(layer);\n      this.layers.push(layer);\n    }\n  }\n\n  /**\n   * 隐藏某一资源对应的图层\n   * @param {string} id\n   */\n  public hideLayer(id: string | number) {\n    if (this.layers.findIndex(layer => layer.id === id.toString()) > -1) {\n      Logger.info(this.TAG, 'remove layer:' + id);\n      this.map.removeLayer(id.toString());\n    }\n  }\n\n\n  /**\n   * 自动播放所有资源，从头开始\n   */\n  public autoDisplay() {\n    this.sourceIds.sort();\n    Logger.info(this.TAG, this.sourceIds);\n    this.reAutoDisplay(0);\n  }\n\n\n  public stop() {\n    Logger.info(this.TAG, '停止播放');\n    clearTimeout(this.timeId);\n    this.hideAllLayer();\n  }\n  /**\n   * 根据区间来自动播放\n   * TODO: 实现，由于开始和结束的时间格式未定，未实现\n   * @param start\n   * @param end\n   */\n  public autoDisplayByRange(start: number, end: number) {\n    const rangeSources = this.mapboxSources.filter(source => start <= source.year && source.year <= end);\n    Logger.info(this.TAG, 'will to play range' ,rangeSources);\n    this.reAutoDisplayByRange(rangeSources, 0);\n  }\n  /**\n   * 从头自动 播放的递归实现\n   * @param index\n   */\n  private reAutoDisplay(index) {\n    // 递归条件结束\n    if (index === this.sourceIds.length) return;\n    // 是否有上层\n    if (index > 0) {\n      this.hideLayer(this.sourceIds[index - 1]);\n    }\n    // 显示当前\n    this.showLayer(this.sourceIds[index]);\n    // 递归\n    setTimeout(() => {\n      this.reAutoDisplay(index + 1);\n    }, 1000);\n  }\n\n  private reAutoDisplayByRange(sources: MapboxSource[], index: number) {\n    if (index === sources.length) return;\n    // 是否有上层\n    if (index > 0) {\n      this.hideLayer(sources[index - 1].ID);\n    }\n    // 显示当前\n    this.showLayer(sources[index].ID);\n    // 递归\n    this.timeId = setTimeout(() => {\n      this.reAutoDisplayByRange(sources, index + 1);\n    }, 1000);\n  }\n\n  private hideAllLayer() {\n    Logger.info(this.TAG, 'hide all');\n    this.layers.forEach(layer => {\n      try {\n          this.map.removeLayer(layer.id);\n      } catch (e) {}\n    })\n  }\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeclare var require : (filename,resolve)=>any;\nconst Consulting = (r) => require(['../common/Consulting.vue'],r);\nconst DetectFixedSideMenu = (r) => require([\"../common/DetectFixedSideMenu.vue\"],r);\nconst PovertyMap = (r) => require([\"../common/map/poverty-map/PovertyMap.vue\"],r);\nimport { Vue, Component } from \"vue-property-decorator\";\n// import Consulting from \"../common/Consulting.vue\";\n// import DetectFixedSideMenu from \"../common/DetectFixedSideMenu.vue\";\n// import PovertyMap from \"../common/map/poverty-map/PovertyMap.vue\";\nimport { Logger } from '../../services/Logger';\nimport { MapLocatePositionService } from '../../services/map-locate-position.service';\nimport { MapSourceService } from '../../services/api/map-source/MapSourceService';\nimport { api } from '../../services/api/ApiProvider';\nimport { Message as MessageService } from '../../services/Message';\nimport { HUBEI_BOUNDS } from '../../constants/mapbox';\nimport { MapSourceAnimationService } from '../../services/map-source-animation.service';\nimport { MapboxSource } from '../../types/mapbox-source';\nimport {Sider,Layout} from 'iview'\n\n@Component({\n  components: {Consulting, DetectFixedSideMenu, PovertyMap,Sider,Layout}\n})\n\nexport default class MapHome extends Vue {\n  private TAG = 'MapHome.vue';\n  private map: mapboxgl.Map;\n  private SHOWING_SOURCE = 'showing-source';\n  private sourceApi: MapSourceService;\n  private messageService: MessageService;\n  private mapAnimationService: MapSourceAnimationService;\n\n  private mapSources = {}; // 地图源\n\n  mounted() {\n    this.sourceApi = api.mapSourceService;\n    this.messageService = new MessageService(this);\n    this.mapSources;\n  }\n\n  handleOnMapLoad(map: mapboxgl.Map) {\n    Logger.info(this.TAG, 'map loaded', map);\n    this.map = map;\n    this.mapAnimationService = new MapSourceAnimationService(map);\n  }\n\n  async chooseMap(year, name){\n    console.log(year, name);\n    console.log('in map home');\n    // const map = this.map;\n    if (!this.map) {\n      this.messageService.error('请等待地图组件加载完成...')\n    }\n    // MapLocatePositionService.locateToPosition([place.lon, place.lat], this.map);\n    if (this.map.isSourceLoaded(this.SHOWING_SOURCE)) {\n      this.map.removeLayer(this.SHOWING_SOURCE);\n      this.map.removeSource(this.SHOWING_SOURCE);\n    }\n    try {\n      let res = await this.sourceApi.getByNameAndYear(name, year);\n      const item = res[0];\n      console.log('【MapHome】', item);\n      if (!item) throw new Error('no source result');\n      let source: mapboxgl.RasterSource = {\n        type: 'raster',\n        url: item.url\n      };\n      this.map.addSource(this.SHOWING_SOURCE, source);\n      this.map.addLayer({\n        id: this.SHOWING_SOURCE,\n        type: 'raster',\n\n        source: this.SHOWING_SOURCE\n      });\n    } catch (e) {}\n  }\n\n\n  handleSelectPalce(item) {\n    const bounds = HUBEI_BOUNDS;\n    const lon = item.lon;\n    const lat = item.lat;\n    if (lon < bounds[0][0] || lon > bounds[1][0] || lat < bounds[0][1] || lat > bounds[1][1]) {\n      this.messageService.error('选择的地点超出范围');\n    } else {\n      MapLocatePositionService.locateToPosition([lon, lat], this.map);\n    }\n  }\n\n  async handlePlayMap(startYear, endYear, name) {\n    if (!this.mapSources[name]) {\n      try {\n        let res = await this.sourceApi.getByName(name);\n        this.mapSources[name] = res;\n        Logger.info(this.TAG, 'get sources', res);\n        (this as any).$Spin.show();\n        await this.mapAnimationService.addSources(this.mapSources[name]);\n        Logger.info(this.TAG, '加载所有sources成功');\n      } catch (e) {} finally {\n        (this as any).$Spin.hide();\n      }\n    }\n    Logger.info(this.TAG, this.mapSources[name]);\n    this.mapAnimationService.autoDisplayByRange(startYear, endYear);\n  }\n\n  handleStopMap() {\n    this.mapAnimationService.stop();\n  }\n}\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--1-1!../../../node_modules/tslint-loader/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--1-1!../../../node_modules/tslint-loader/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapHome.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./MapHome.vue?vue&type=template&id=7baeb53e&scoped=true\"\nimport script from \"./MapHome.vue?vue&type=script&lang=ts\"\nexport * from \"./MapHome.vue?vue&type=script&lang=ts\"\nimport style0 from \"./MapHome.vue?vue&type=style&index=0&id=7baeb53e&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7baeb53e\",\n  null\n  \n)\n\nexport default component.exports","export class Message {\n  private _vm: any;\n  constructor(vm: any) {\n    this._vm = vm;\n  }\n  info(msg) {\n    this._vm.$Message.info(msg);\n  }\n  error(msg) {\n    this._vm.$Message.error(msg);\n  }\n}","import {MapTypeOption} from \"@/models/MapTypeOption\";\nimport {DataAnalysisService} from \"@/services/api/dataanalysis/DataAnalysisService\";\n\nexport class DataAnalysisServiceMock implements DataAnalysisService {\n    async getPoorState(): Promise<MapTypeOption[]> {\n        const mapTypeOptionList: MapTypeOption[] = [\n            {\n                value: \"综合贫困排名\",\n                label: \"综合贫困排名\",\n                children: [\n                    {\n                        value: \"VSR指标排名\",\n                        label: \"VSR指标排名\",\n                        children: [\n                            {\n                                value: \"夜间灯光指标\",\n                                label: \"夜间灯光指标\",\n                                children: []\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                value: \"分类贫困排名\",\n                label: \"分类贫困排名\",\n                children: [\n                    {\n                        value: \"经济指标排名\",\n                        label: \"经济指标排名\",\n                        children: [\n                            {\n                                value: \"未来收入\",\n                                label: \"未来收入\",\n                                children: []\n                            }\n                        ]\n                    }\n                ]\n            },\n        ];\n        return mapTypeOptionList;\n    }\n}","import {MapTypeOption} from \"src/models/MapTypeOption\";\nimport http from \"@/services/api/HttpService\";\n\nexport interface DataAnalysisService {\n    getPoorState(): Promise<MapTypeOption[]>;\n}\n\nexport class DataAnalysisServiceImpl implements DataAnalysisService {\n    async getPoorState(): Promise<MapTypeOption[]> {\n        const res = await http.fetch({\n            path: `analysis/state`,\n        });\n        return res.response;\n    }\n}","import { SearchResult } from '@/models/SearchResult';\nimport http from '@/services/api/HttpService';\n\nexport interface SearchService {\n  search(kw: string): Promise<SearchResult[]>;\n}\n\nexport class SearchServiceImpl implements SearchService {\n  async search(kw: string): Promise<SearchResult[]> {\n    const res = await http.fetch({\n      path: 'search',\n      queryParams: {kw: kw}\n    });\n    return res.response;\n  }\n\n}","import { SearchService } from '@/services/api/search/SearchService';\nimport { SearchResult } from '@/models/SearchResult';\n\nexport class SearchServiceMock implements SearchService {\n  async search(kw: string): Promise<SearchResult[]> {\n    return undefined;\n  }\n\n}","import { MapboxSource } from '@/types/mapbox-source';\nimport http from '@/services/api/HttpService';\n\nexport interface MapSourceService {\n  getByName(name: string): Promise<MapboxSource[]>;\n  getByNameAndYear(name: string, year: number): Promise<MapboxSource[]>;\n}\n\nexport class MapSourceServiceImpl implements MapSourceService{\n  async getByName(name: string): Promise<MapboxSource[]> {\n    let res = await http.fetch({\n      path: 'map',\n      queryParams: {name: name}\n    });\n    return res.response;\n  }\n\n  async getByNameAndYear(name: string, year: number): Promise<MapboxSource[]> {\n    console.log('MapSourceApi', name, year);\n    let res = await http.fetch({\n      path: 'map/year',\n      queryParams: {name, year}\n    });\n    return res.response;\n  }\n\n}","export class MapboxSource {\n  ID: number | string;\n  type: string;\n  name: string;\n  url: string;\n  year: number;\n\n\n  constructor(ID: number, type: string, name: string, url: string, year: number) {\n    this.ID = ID;\n    this.type = type;\n    this.name = name;\n    this.url = url;\n    this.year = year;\n  }\n}","import { MapSourceService } from '@/services/api/map-source/MapSourceService';\nimport { MapboxSource } from '@/types/mapbox-source';\nimport { tileSets } from '@/constants/mapbox';\n\nconst source = new MapboxSource(1, 'raster', 'hubeiGDP', 'mapbox://wenxiangdong.aa00vskv', 2010);\n\nexport class MapSourceServiceMock implements MapSourceService{\n  async getByName(name: string): Promise<MapboxSource[]> {\n    let res = [];\n    res.push({\n      ID: 1,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubeiDEM,\n      year: 2010\n    });\n    res.push({\n      ID: 2,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubeiGDP,\n      year: 2011\n    });\n    res.push({\n      ID: 3,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubeiSlope,\n      year: 2012\n    });\n    res.push({\n      ID: 4,\n      type: 'raster',\n      name: 'name',\n      url: tileSets.hubieNightLight,\n      year: 2013\n    });\n    return res;\n  }\n\n  async getByNameAndYear(name: string, year: number): Promise<MapboxSource[]> {\n    let res = [\n      source\n    ];\n    return res;\n  }\n\n}","import { DataAnalysisServiceMock } from '@/services/api/dataanalysis/DataAnalysisServiceMock';\nimport { DataAnalysisService, DataAnalysisServiceImpl } from '@/services/api/dataanalysis/DataAnalysisService';\nimport { SearchService, SearchServiceImpl } from '@/services/api/search/SearchService';\nimport { SearchServiceMock } from '@/services/api/search/SearchServiceMock';\nimport { MapSourceService, MapSourceServiceImpl } from '@/services/api/map-source/MapSourceService';\nimport { MapSourceServiceMock } from '@/services/api/map-source/MapSourceServiceMock';\n\nclass ApiProvider {\n  isMock: boolean = false;\n\n  dataAnalysisService: DataAnalysisService;\n  searchService: SearchService;\n  mapSourceService: MapSourceService;\n\n  constructor() {\n    if (this.isMock) {\n      this.dataAnalysisService = new DataAnalysisServiceMock();\n      this.searchService = new SearchServiceMock();\n      this.mapSourceService = new MapSourceServiceMock();\n    } else {\n      this.dataAnalysisService = new DataAnalysisServiceImpl();\n      this.searchService = new SearchServiceImpl();\n      this.mapSourceService = new MapSourceServiceImpl();\n    }\n  }\n}\n\nexport const api = new ApiProvider();"],"sourceRoot":""}